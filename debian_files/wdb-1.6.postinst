#!/bin/sh -e
# postinst script for wdb
#
# see: dh_installdeb(1)
#
# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

# Source debconf library
. /usr/share/debconf/confmodule

# Get database information
db_get wdb/database_name && DB_NAME="$RET"
db_get wdb/database_admin && DB_USER="$RET"

case "$1" in
    configure)
    	# Check for database user
		if ! id -u $DB_USER > /dev/null 2>&1; then
		    adduser --gecos 0 --disabled-password $DB_USER
		    # Remove any old crontab entries if this account have had any before
		    su $DB_USER -c "crontab -r" 2> /dev/null || true
		fi
		# Check for home directory
		if [ ! -d /home/$DB_USER ]; then
			# Create if missing
			mkdir -p /home/$DB_USER
			chown $DB_USER:$DB_USER /home/$DB_USER
		fi
		# Pass PATH to .bashrc
		echo 'PATH=$PATH:/usr/lib/wdb/' >> /home/$DB_USER/.bashrc
		# Generate config file
		if [ ! -f /etc/wdb.conf ]; then
		    echo "database = $DB_NAME" > /etc/wdb.conf
		    DB_PORT=`pg_lsclusters -h | grep main | xargs echo | cut -d' ' -f3`
		    echo "port = $DB_PORT" >> /etc/wdb.conf
		    echo "user = $DB_USER" >> /etc/wdb.conf
		fi
		
		# Create user for installation
		su postgres -c "psql -c \"CREATE ROLE $DB_USER\"" >> /dev/null 2>&1 || true
		su postgres -c "psql -c \"ALTER ROLE $DB_USER WITH SUPERUSER\"" >> /dev/null 2>&1
		su postgres -c "psql -c \"ALTER ROLE $DB_USER WITH LOGIN\"" >> /dev/null 2>&1
		# Run install script
		su $DB_USER -c "/usr/lib/wdb/wdb/install_database -d $DB_NAME -u $DB_USER"
		# Grant administrator rights to user	
		su postgres -c "psql -c \"GRANT wdb_admin TO $DB_USER WITH ADMIN OPTION\"" >> /dev/null 2>&1
    ;;
    abort-upgrade)
    	# success: We have successfully aborted an upgrade
    ;;
    abort-remove|abort-deconfigure)
		# weird stuff happening
    ;;
    *)
    	# really weird stuff happening
        echo "postinst called with unknown argument '$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.
#DEBHELPER#

exit 0
